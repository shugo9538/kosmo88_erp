<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.kosmo88.logistics_erp.account.dao.AccountDAO">

<!-- 기초정보관리  -->
<!-- 1. 거래처 목록건수  -->
<select id="getClientCnt" resultType="int">
	SELECT COUNT(*) as cnt FROM CLIENT
</select>
<!-- 2. 거래처 목록조회 -->
<select id="selectClient" resultType="ClientDTO">
<![CDATA[
SELECT * 
FROM (SELECT id, type, name, ceo_name, register_num, address, register_date, zip_code, email, ROWNUM rNum     
FROM(SELECT * FROM CLIENT
  ORDER BY register_date DESC)
  )
  WHERE rNum >=#{start} AND rNum <=#{end}
]]>
</select>
<!-- 3. 신규거래처 등록 -->
<insert id="insertClient">
INSERT INTO CLIENT(id, type, name, ceo_name, register_num, address, register_date)
        VALUES(#{id}, #{type}, #{name}, #{ceo_name}, #{register_num}, #{address} ,#{SYSDATE})	
</insert>
<!-- 4. 거래처 정보수정(where => 사업자등록번호) -->
<update id="updeateClient" parameterType="int">
UPDATE CLIENT
SET type=#{type},name=#{name},ceo_name=#{ceo_name},register_num=#{register_num},address=#{address}
where register_num = #{register_num}
</update>
<!-- 5. 거래체 목록 삭제(where => 사업자등록번호) -->
<delete id="deleteClient" parameterType="int">
DELETE FROM CLIENT WHERE register_num=#{register_num}
</delete>

<!-- 장부관리-일반전표 -->
<!-- 1. 일반전표 건수 -->
<select id="getSlipCnt" resultType="int">
SELECT COUNT(*)as cnt FROM slip
</select>
<!-- 2. 일반전표 조회 -->
<select id="selectSlip" resultType="SlipDTO">
<![CDATA[
SELECT *
FROM (SELECT ID, TYPE, REGISTER_DATE, UPDATE_DATE, STATE, DEPARTMENT_ID, DEPARTMENT_REQUEST, ROWNUM rNum   
FROM(SELECT *
  FROM slip
  ORDER BY REGISTER_DATE))
  WHERE rNum >=#{start} AND rNum <=#{end}
]]>
</select>
<!-- 3. 일반전표 등록 (update_date 승인일자제외, state제외 default N) -->
<insert id="insertSlip">
INSERT INTO slip(id, type, register_date, department_id, department_request)
    VALUES(#{id}, #{type}, SYSDATE, #{department_id}, #{department_request})
</insert>
<!-- 4. 파트별 전표승인 -->
<update id="updateSlipState" parameterType="java.util.Map">
UPDATE slip
SET UPDATE_DATE = SYSDATE, STATE='Y'
WHERE DEPARTMENT_ID=#{DEPARTMENT_ID} AND DEPARTMENT_REQUEST=#{DEPARTMENT_REQUEST}
</update>
<!-- 5. 일반전표 수정 -->
<!-- 6. 일반전표 삭제  enabled 처리  -->


<!-- 장부관리-매입/매출장 -->
<!-- 1-1. 매입/매출전표 건수 -->
<select id="getSalesSlipCnt" resultType="int">
SELECT COUNT(*)as cnt FROM sales_slip
</select>
<!-- 1-2.매입/매출 건수  -->
<select id="getSalesPurchaseCnt" resultType="int">
SELECT COUNT(*)as cnt FROM sales_slip WHERE type=#{type} 
</select>

<!-- 2-1. 매입/매출전표 목록조회 -->
<select id="selectSalesSlip" resultType="SalesSlipDTO" parameterType="java.util.Map">
<![CDATA[
SELECT sl.update_date as confirm_date, sl.id, sl.account_title, re.cl_id as client_code, 
       re.name as client_name, re.register_num as client_num, it.name,
       sl.supply_amount, sl.tax_amount, sl.abstract as abs, sl.sa_type as type, 
       sl.sl_id as slip_id,rownum
  FROM ACCOUNT_SLIP_VIEW sl, ACCOUNT_REQUEST_VIEW re, item it
WHERE sl.department_request = re.id AND re.item_id = it.id AND rownum >=#{start} AND rownum <=#{end}
]]>
</select>
<!-- 2-2. 매입, 매출전표조회 -->
<select id="selectSalesPurchase" resultType="SalesSlipDTO" parameterType="java.util.Map">
<![CDATA[
SELECT sl.update_date as confirm_date, sl.id, sl.account_title, re.cl_id as client_code, 
       re.name as client_name, re.register_num as client_num, it.name as product_name,
       sl.supply_amount, sl.tax_amount, sl.abstract as abs, sl.sa_type as type,  
       sl.sl_id as slip_id, rownum
  FROM ACCOUNT_SLIP_VIEW sl, ACCOUNT_REQUEST_VIEW re, item it
WHERE sl.department_request = re.id AND re.item_id = it.id
AND sl.sa_type =#{type} AND rownum >=#{start} AND rownum <=#{end}
]]>
</select>
<!-- 4. 매입/매출전표 등록 -->
<!-- 5. 매입/매출전표 수정 -->
<!-- 6. 매입/매출전표 삭제 enabled 처리 -->

<!-- 금융/자금관리  -->
<!-- 1. 통장건수 조회  -->
<select id="getAccountCnt" resultType="int">
SELECT COUNT(*) as cnt FROM ACCOUNT
</select>

<!-- 2. 통장목록 조회 -->
<select id="selectAccount" parameterType="java.util.Map" resultType="AccountDTO">
<![CDATA[
SELECT *
FROM(SELECT id, name, account_number, bank, balance, abstract abs, register, account_holder_id, ROWNUM rNUM 
FROM(SELECT * FROM ACCOUNT
ORDER BY register))
WHERE rNUM >=#{start} and rNUM <=#{end}
]]>
</select>
<!-- 3. 통장입출금 등록 -->
<!-- 4. 통장 입금내역조회 -->
<!-- 5. 통장 출금내역조회 -->
<!-- 6. 통장입출금 수정 -->
<!-- 7. 통장입출금 삭제-->


</mapper>    