<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kosmo88.logistics_erp.wms.dao.StockDao">
	<!-- namespace="StockDao"> -->



	<!-- 입고시 insert 처리한다 -->
<!-- 	<insert id="insertStock" parameterType="StockDto"> -->
<!-- 		INSERT INTO STOCK (ID, SECTION_ID, ITEM_ID, COUNT) -->
<!-- 		VALUES (MAX_ID('STOCK')+1, #{section_id}, #{item_id}, #{count}) -->
<!-- 	</insert> -->
	
		<!-- 입고시 insert 처리한다 -->
	<insert id="insertStock" parameterType="Map">
		INSERT INTO STOCK (ID, SECTION_ID, ITEM_ID, COUNT)
		VALUES (MAX_ID('STOCK')+1, #{sectionId}, #{itemId}, #{quantity})
	</insert>

	<select id="selectMaxId" resultType="int">
		SELECT MAX_ID('STOCK')
		FROM DUAL
	</select>

	<!-- stockList -->
	<select id="selectStockList" parameterType="int"
		resultType="V_stockDto">
		SELECT * FROM V_STOCK
		WHERE WAREHOUSE_ID = #{warehouseId}
		ORDER BY MIN_REGISTER_DATE DESC
		<!-- AND ITEM_ID = 1 -->
	</select>


	<select id="selectStockDetailList" parameterType="int"
		resultType="V_stock_detailDto">
		SELECT * FROM V_STOCK_DETAIL
		WHERE SECTION_ID = #{warehouseId}
		ORDER BY REGISTER_DATE DESC
		<!-- AND ITEM_ID = 1 -->
	</select>

<!-- 재고 여부 -->
	<select id="selectValidStockList" parameterType="Map"
		resultType="V_stockDto">
		SELECT S.*
		FROM V_STOCK S 
		WHERE (ITEM_ID IS NULL 
		OR ITEM_NAME IN 
			<foreach collection="itemArr" item="item" separator="," open="(" close=")" >
				#{item}
			</foreach>
			)
		AND S.WAREHOUSE_ID = #{warehouseId}
	</select>
	
	<select id="selectOldestStock" parameterType="int" 
	resultType="V_stock_detailDto">
		SELECT *
		FROM V_STOCK_DETAIL
		WHERE REGISTER_DATE = (
			SELECT MIN(REGISTER_DATE)
			FROM V_STOCK_DETAIL
			WHERE ITEM_ID = #{itemId}
			)
		AND ITEM_ID = #{itemId}
		

	</select>
	
	<update id="updateStockQuantity" parameterType="Map">
		UPDATE STOCK
		SET COUNT=#{quantity}
		WHERE ID = #{stockId}
	</update>
	
	<delete id="deleteStock" parameterType="int">
		DELETE FROM STOCK
		WHERE ID = #{stockId}
	</delete>


</mapper>    	
